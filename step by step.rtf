{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red239\green239\blue239;\red31\green31\blue31;}
{\*\expandedcolortbl;;\cssrgb\c94902\c94902\c94902;\cssrgb\c16078\c16078\c16078;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
This project involves a parking solution using a AWR1843AOPEVM, Nucleo board, custom PCB, and ground sensors (DRV5055). I used GitHub Copilot to generate Python code for sensor data processing, even though I had no prior Python experience. It\'92s a hands-on example of combining hardware with software to solve a real-world problem.\cb1 \
\cb3 Technologies Used: AWR1843AOPEVM Nucleo board Custom PCB Ground sensors GitHub Copilot (for code generation)\cb1 \
\cb3 What I Learned: How to integrate hardware and software. How to use AI tools to accelerate coding. The value of documenting complex projects.\cb1 \
\cb3 Instructions how to use:\cb1 \
\cb3 You need to download program like Tera Term/PuTTY\cb1 \
\cb3 You need to connect awr1843aopevm to PC, start Tera Term/PuTTY, and use enhanced PORT with 115200 baudrate\cb1 \
\cb3 Go into Setup and choose Serial port so you can change baud rate on program to your awr1843aopevm. Type 115200, 8bit, none, 1bit, none, transmit delay is 0 0.\cb1 \
\cb3 Then when you do that, in the top left corner go into File - Send File - and in the filename upload .cfg and this is the crucial part, leave file reading method as it is "Bulk Read", and Binary is off, but Delay type is per line and delay time(ms) is 20 always for me, otherwise you will see gibberish in your console.\cb1 \
\cb3 When your code is uploaded on program, you will need to press ENTER one more time so the code starts, no Error messages should be displayed, and radar should start ticking.\cb1 \
\cb3 NOW NEXT STEPS ARE ONLY IF YOU WANT TO USE NUCLEO + CUSTOM PCB LIKE ME, IF YOU DONT WANT TO USE IT, JUST STICK TO THE FIRST 5 STEPS.\cb1 \
\cb3 Whole NUCLEO file couldn't fit so I placed png images of pinouts how it should look. GO THROUGH ALL OF THE PICTURES, everything must be the same!\cb1 \
\cb3 Now Nucleo is in order, I used NUCLEO-WL55JC1, 6.6.0 version for MX, you can use even newer if you want, this was easier for me (Note: if you want to use 6.6.0 MX like me use 1.10.0 IDE so you wont have any complications with installation). Than you should upload your main.c code to nucleo, you have full pinout order for your MX, so when you go into STM32CUBEIDE, connect your Nucleo in pc aswell and just upload code, its very easy.\cb1 \
\cb3 When you have both of it, I used custom PCB to bridge MX/TX and GND of AWR1843AOPEVM with Nucleo, this is crucial because they have to have stable communication between eachother. (Note: You can always check if your nucleo is communicating with AWR1843AOPEVM with Tera Term/PuTTY.)\cb1 \
\cb3 Now I used custom PCB especially for nucleo and ground sensors, so my logic was I will easy out the mapping for radar because when ground sensor is triggered it sends pulse to nucleo which will send pulse to radar, and radar will use its logic and scan area where the sensor are triggered. And it worked like you saw in video.\cb1 \
\cb3 Thats it. Happy prototyping. Leave comment, rate my project.\cb1 \
\cb3 Thank you for your attention.}